#priority 99

import mods.gregtech.multiblock.Builder;
import mods.gregtech.multiblock.FactoryBlockPattern;
import mods.gregtech.multiblock.RelativeDirection;
import mods.gregtech.multiblock.functions.IPatternBuilderFunction;
import mods.gregtech.IControllerTile;
import mods.gregtech.multiblock.CTPredicate;
import mods.gregtech.multiblock.IBlockPattern;
import mods.gregtech.recipe.FactoryRecipeMap;
import mods.gregtech.machine.Renderer;
import mods.gregtech.machine.MachineBuilder;
import mods.gregtech.recipe.RecipeMapBuilder;
import mods.gregtech.recipe.RecipeMaps;
import mods.gregtech.recipe.RecipeMap;

val assembler as RecipeMap = <recipemap:assembler>;
val canner as RecipeMap = <recipemap:canner>;

global zpe as RecipeMap = FactoryRecipeMap.start("zpe")
                .minInputs(1)
                .maxInputs(2)
                .build();

//Zero Point Extractor
MachineBuilder.create(32570, "ZPE")
    .setRecipeMap(zpe)
    .setRenderer("machines/replicator") //place holder
    .addTier(1,2,3,4,5,6,7,8,9,10,11,12,13,14)
    .setGenerator()
    .buildAndRegister();

//ZPE Lv
assembler.recipeBuilder()
    .inputs([
        <gregtech:meta_item_1:202> * 4, //LV Field Generator
        <gregtech:meta_item_1:603> * 3, //LPIC
        <gregtech:meta_item_1:232> * 8, //LV Sensor
        <gregtech:meta_item_1:525> * 16, //SMD Capacitor
        <gregtech:wire_single:424> * 4, //LV Superconductor
        <gregtech:meta_item_1:217> * 1 // LV Emitter
    ])
    .fluidInputs(<liquid:radon> * 8000)
    .outputs(<gregtech:machine:32573> * 1) //ZPE Lv
    .EUt(360)
    .duration(12000)
    .buildAndRegister();

//ZPE Mv
assembler.recipeBuilder()
    .inputs([
        <gregtech:meta_item_1:203> * 4, //MV Field Generator
        <gregtech:meta_item_1:603> * 6, //LPIC
        <gregtech:meta_item_1:233> * 8, //MV Sensor
        <gregtech:meta_item_1:525> * 24, //SMD Capacitor
        <gregtech:wire_single:425> * 4, //MV Superconductor
        <gregtech:meta_item_1:218> * 1 // MV Emitter
    ])
    .fluidInputs(<liquid:radon> * 8000)
    .outputs(<gregtech:machine:32574> * 1) //ZPE Mv
    .EUt(1440)
    .duration(12000)
    .buildAndRegister();

//ZPE Hv
assembler.recipeBuilder()
    .inputs([
        <gregtech:meta_item_1:204> * 4, //HV Field Generator
        <gregtech:meta_item_1:603> * 12, //LPIC
        <gregtech:meta_item_1:234> * 8, //HV Sensor
        <gregtech:meta_item_1:525> * 32, //SMD Capacitor
        <gregtech:wire_single:426> * 4, //HV Superconductor
        <gregtech:meta_item_1:219> * 1 // HV Emitter
    ])
    .fluidInputs(<liquid:radon> * 8000)
    .outputs(<gregtech:machine:32575> * 1) //ZPE Hv
    .EUt(5120)
    .duration(12000)
    .buildAndRegister();

//ZPE Ev
assembler.recipeBuilder()
    .inputs([
        <gregtech:meta_item_1:205> * 4, //EV Field Generator
        <gregtech:meta_item_1:603> * 24, //LPIC
        <gregtech:meta_item_1:235> * 8, //EV Sensor
        <gregtech:meta_item_1:530> * 8, //Adv. SMD Capacitor
        <gregtech:wire_single:427> * 4, //EV Superconductor
        <gregtech:meta_item_1:220> * 1 // EV Emitter
    ])
    .fluidInputs(<liquid:radon> * 8000)
    .outputs(<gregtech:machine:32576> * 1) //ZPE Ev
    .EUt(16384)
    .duration(12000)
    .buildAndRegister();

//ZPE Iv
assembler.recipeBuilder()
    .inputs([
        <gregtech:meta_item_1:206> * 4, //IV Field Generator
        <gregtech:meta_item_1:604> * 6, //PIC
        <gregtech:meta_item_1:236> * 8, //IV Sensor
        <gregtech:meta_item_1:530> * 16, //Adv. SMD Capacitor
        <gregtech:wire_single:428> * 4, //IV Superconductor
        <gregtech:meta_item_1:221> * 1 // IV Emitter
    ])
    .fluidInputs(<liquid:radon> * 8000)
    .outputs(<gregtech:machine:32577> * 1) //ZPE Iv
    .EUt(16384)
    .duration(12000)
    .buildAndRegister();

//ZPE LuV
assembler.recipeBuilder()
    .inputs([
        <gregtech:meta_item_1:207> * 4, //LuV Field Generator
        <gregtech:meta_item_1:604> * 12, //PIC
        <gregtech:meta_item_1:237> * 8, //LuV Sensor
        <gregtech:meta_item_1:530> * 32, //Adv. SMD Capacitor
        <gregtech:wire_single:429> * 4, //LuV Superconductor
        <gregtech:meta_item_1:222> * 1 // LuV Emitter
    ])
    .fluidInputs(<liquid:radon> * 8000)
    .outputs(<gregtech:machine:32578> * 1) //ZPE LuV
    .EUt(32768)
    .duration(12000)
    .buildAndRegister();

//ZPE ZPM
assembler.recipeBuilder()
    .inputs([
        <gregtech:meta_item_1:208> * 4, //ZPM Field Generator
        <gregtech:meta_item_1:604> * 24, //PIC
        <gregtech:meta_item_1:238> * 8, //ZPM Sensor
        <gregtech:meta_item_1:530> * 64, //Adv. SMD Capacitor
        <gregtech:wire_single:430> * 4, //ZPM Superconductor
        <gregtech:meta_item_1:223> * 1 //ZPM Emitter
    ])
    .fluidInputs(<liquid:radon> * 8000)
    .outputs(<gregtech:machine:32579> * 1) //ZPE ZPM
    .EUt(131072)
    .duration(12000)
    .buildAndRegister();

//ZPE UV
assembler.recipeBuilder()
    .inputs([
        <gregtech:meta_item_1:209> * 4, //UV Field Generator
        <gregtech:meta_item_1:604> * 48, //PIC
        <gregtech:meta_item_1:239> * 8, //UV Sensor
        <gregtech:meta_item_1:534> * 8, //Quantum SMD Capacitor
        <gregtech:wire_single:431> * 4, //UV Superconductor
        <gregtech:meta_item_1:224> * 1 //UV Emitter
    ])
    .fluidInputs(<liquid:radon> * 8000)
    .outputs(<gregtech:machine:32580> * 1) //ZPE UV
    .EUt(300000)
    .duration(12000)
    .buildAndRegister();

//ZPE UHV
assembler.recipeBuilder()
    .inputs([
        <gregtech:meta_item_1:210> * 4, //UHV Field Generator
        <gregtech:meta_item_1:605> * 16, //HPIC
        <gregtech:meta_item_1:240> * 8, //UHV Sensor
        <gregtech:meta_item_1:534> * 16, //Quantum SMD Capacitor
        <gregtech:wire_single:432> * 4, //UHV Superconductor
        <gregtech:meta_item_1:225> * 1 //UHV Emitter
    ])
    .fluidInputs(<liquid:radon> * 8000)
    .outputs(<gregtech:machine:32581> * 1) //ZPE UHV
    .EUt(600000)
    .duration(12000)
    .buildAndRegister();

//ZPE UEV
assembler.recipeBuilder()
    .inputs([
        <gregtech:meta_item_1:211> * 4, //UHV Field Generator
        <gregtech:meta_item_1:605> * 32, //HPIC
        <gregtech:meta_item_1:241> * 8, //UHV Sensor
        <gregtech:meta_item_1:534> * 32, //Quantum SMD Capacitor
        <gregtech:wire_single:32003> * 4, //Dark Matter Alloy Wire
        <gregtech:meta_item_1:226> * 1 //UHV Emitter
    ])
    .fluidInputs(<liquid:radon> * 8000)
    .outputs(<gregtech:machine:32582> * 1) //ZPE UEV
    .EUt(1200000)
    .duration(12000)
    .buildAndRegister();

//ZPE UIV
assembler.recipeBuilder()
    .inputs([
        <gregtech:meta_item_1:212> * 4, //UIV Field Generator
        <gregtech:meta_item_1:605> * 64, //HPIC
        <gregtech:meta_item_1:242> * 8, //UIV Sensor
        <gregtech:meta_item_1:534> * 64, //Quantum SMD Capacitor
        <gregtech:wire_single:32004> * 4, //Dark Energy Wire
        <gregtech:meta_item_1:227> * 1 //UIV Emitter
    ])
    .fluidInputs(<liquid:radon> * 8000)
    .outputs(<gregtech:machine:32583> * 1) //ZPE UIV
    .EUt(10000000)
    .duration(12000)
    .buildAndRegister();

//ZPE UXV
assembler.recipeBuilder()
    .inputs([
        <gregtech:meta_item_1:213> * 4, //UXV Field Generator
        <gregtech:meta_item_1:606> * 8, //UHPIC
        <gregtech:meta_item_1:243> * 8, //UXV Sensor
        <gregtech:meta_item_1:538> * 32, //Wetwere SMD Capacitor
        <gregtech:wire_single:32005> * 4, //Stellarite Wire
        <gregtech:meta_item_1:228> * 1 //UXV Emitter
    ])
    .fluidInputs(<liquid:radon> * 8000)
    .outputs(<gregtech:machine:32584> * 1) //ZPE UXV
    .EUt(40000000)
    .duration(12000)
    .buildAndRegister();

//ZPE OpV
assembler.recipeBuilder()
    .inputs([
        <gregtech:meta_item_1:214> * 4, //OpV Field Generator
        <gregtech:meta_item_1:606> * 16, //UHPIC
        <gregtech:meta_item_1:244> * 8, //OpV Sensor
        <gregtech:meta_item_1:538> * 64, //Wetwere SMD Capacitor
        <gregtech:wire_single:32006> * 4, //Runic Infused Stellarite Wire
        <gregtech:meta_item_1:229> * 1 //OpV Emitter
    ])
    .fluidInputs(<liquid:radon> * 8000)
    .outputs(<gregtech:machine:32585> * 1) //ZPE OpV
    .EUt(80000000)
    .duration(12000)
    .buildAndRegister();

//ZPE MAX
assembler.recipeBuilder()
    .inputs([
        <gregtech:meta_item_1:214> * 16, //OpV Field Generator
        <gregtech:meta_item_1:606> * 64, //UHPIC
        <gregtech:meta_item_1:244> * 32, //OpV Sensor
        <gregtech:meta_item_1:541> * 16, //Supracausal SMD Capacitor
        <gregtech:wire_single:32007> * 4, //Stellarbord Matter Wire
        <gregtech:meta_item_1:229> * 4 //OpV Emitter
    ])
    .fluidInputs(<liquid:radon> * 8000)
    .outputs(<gregtech:machine:32586> * 1) //ZPE MAX
    .EUt(500000000)
    .duration(12000)
    .buildAndRegister();

//Wetwere Capacitor
assembler.recipeBuilder()
    .inputs([
        <gregtech:meta_foil:32003> * 2,
        <gregtech:meta_item_1:387> * 1,
        <gregtech:meta_foil:32004> * 2
    ])
    .fluidInputs(<liquid:polybenzimidazole> * 144)
    .outputs(<gregtech:meta_item_1:538> * 32)
    .EUt(131072)
    .duration(200)
    .buildAndRegister();

//Wetwere Diode
assembler.recipeBuilder()
    .inputs([
        <gregtech:meta_wire_fine:32003> * 2,
        <gregtech:meta_item_1:387> * 1,
        <gregtech:meta_wire_fine:32004> * 2
    ])
    .fluidInputs(<liquid:polybenzimidazole> * 144)
    .outputs(<gregtech:meta_item_1:540> * 32)
    .EUt(131072)
    .duration(200)
    .buildAndRegister();

//Wetwere Resistor
assembler.recipeBuilder()
    .inputs([
        <gregtech:meta_wire_fine:32003> * 8,
        <gregtech:meta_item_1:387> * 1,
        <gregtech:meta_dust:342> * 2
    ])
    .fluidInputs(<liquid:polybenzimidazole> * 144)
    .outputs(<gregtech:meta_item_1:539> * 32)
    .EUt(131072)
    .duration(200)
    .buildAndRegister();

//Wetwere Transistor
assembler.recipeBuilder()
    .inputs([
        <gregtech:meta_wire_fine:32003> * 8,
        <gregtech:meta_item_1:387> * 1,
        <gregtech:meta_foil:32003> * 2
    ])
    .fluidInputs(<liquid:polybenzimidazole> * 144)
    .outputs(<gregtech:meta_item_1:537> * 32)
    .EUt(131072)
    .duration(200)
    .buildAndRegister();

//Supracausal Transistor
assembler.recipeBuilder()
    .inputs([
        <gregtech:meta_wire_fine:32006> * 8,
        <ore:circuitUiv> * 1,
        <gregtech:meta_foil:32005> * 2
    ])
    .fluidInputs(<liquid:polybenzimidazole> * 144)
    .outputs(<gregtech:meta_item_1:544> * 32)
    .EUt(64000000)
    .duration(200)
    .buildAndRegister();

//Supracausal Capacitor
assembler.recipeBuilder()
    .inputs([
        <gregtech:meta_foil:32006> * 2,
        <ore:circuitUiv> * 1,
        <gregtech:meta_foil:32005> * 2
    ])
    .fluidInputs(<liquid:polybenzimidazole> * 144)
    .outputs(<gregtech:meta_item_1:541> * 32)
    .EUt(64000000)
    .duration(200)
    .buildAndRegister();

//Supracausal Resistor
assembler.recipeBuilder()
    .inputs([
        <gregtech:meta_wire_fine:32006> * 8,
        <ore:circuitUiv> * 1,
        <gregtech:meta_dust:342> * 2
    ])
    .fluidInputs(<liquid:polybenzimidazole> * 144)
    .outputs(<gregtech:meta_item_1:541> * 32)
    .EUt(64000000)
    .duration(200)
    .buildAndRegister();

//Supracausal Diode
assembler.recipeBuilder()
    .inputs([
        <gregtech:meta_wire_fine:32006> * 8,
        <ore:circuitUiv> * 1,
        <gregtech:meta_wire_fine:32005> * 8
    ])
    .fluidInputs(<liquid:polybenzimidazole> * 144)
    .outputs(<gregtech:meta_item_1:541> * 32)
    .EUt(64000000)
    .duration(200)
    .buildAndRegister();

//Basic Generation Materials
//Dirt
zpe.recipeBuilder()
    .inputs(<ore:dirt> * 1)
    .circuit(1)
    .EUt(-1)
    .duration(800)
    .buildAndRegister();
//**Stone**
zpe.recipeBuilder()
    .inputs(<ore:stoneSmooth> * 1)
    .circuit(1)
    .EUt(-1)
    .duration(800)
    .buildAndRegister();

zpe.recipeBuilder()
    .inputs(<ore:stoneCobble> * 1)
    .circuit(1)
    .EUt(-1)
    .duration(800)
    .buildAndRegister();

zpe.recipeBuilder()
    .inputs(<ore:stoneBasalt> * 1)
    .circuit(1)
    .EUt(-1)
    .duration(800)
    .buildAndRegister();

zpe.recipeBuilder()
    .inputs(<ore:stoneMarble> * 1)
    .circuit(1)
    .EUt(-1)
    .duration(800)
    .buildAndRegister();

//Wood
zpe.recipeBuilder()
    .inputs(<ore:logWood> * 1)
    .circuit(1)
    .EUt(-1)
    .duration(800)
    .buildAndRegister();

zpe.recipeBuilder()
    .inputs(<ore:plankWood> * 1)
    .circuit(1)
    .EUt(-1)
    .duration(800)
    .buildAndRegister();

zpe.recipeBuilder()
    .inputs(<ore:treeSapling> * 1)
    .circuit(1)
    .EUt(-1)
    .duration(800)
    .buildAndRegister();

//Medium Generation Fuel

zpe.recipeBuilder()
    .inputs(<ore:charcoal> * 1)
    .circuit(1)
    .EUt(-4)
    .duration(800)
    .buildAndRegister();

zpe.recipeBuilder()
    .inputs(<ore:coal> * 1)
    .circuit(1)
    .EUt(-8)
    .duration(800)
    .buildAndRegister();

zpe.recipeBuilder()
    .inputs(<minecraft:iron_ingot> * 1)
    .circuit(1)
    .EUt(-16)
    .duration(800)
    .buildAndRegister();

zpe.recipeBuilder()
    .inputs(<minecraft:gold_ingot> * 1)
    .circuit(1)
    .EUt(-32)
    .duration(800)
    .buildAndRegister();

zpe.recipeBuilder()
    .inputs(<minecraft:diamond> * 1)
    .circuit(1)
    .EUt(-64)
    .duration(800)
    .buildAndRegister();

zpe.recipeBuilder()
    .inputs(<ore:dustGlowstone> * 1)
    .circuit(1)
    .EUt(-128)
    .duration(600)
    .buildAndRegister();

zpe.recipeBuilder()
    .inputs(<ore:dustRedstone> * 1)
    .circuit(1)
    .EUt(-256)
    .duration(400)
    .buildAndRegister();

zpe.recipeBuilder()
    .inputs(<ore:gemLapis> * 1)
    .circuit(1)
    .EUt(-128)
    .duration(800)
    .buildAndRegister();

//High Value Fuel

zpe.recipeBuilder()
    .inputs(<ore:dustTungsten> * 1)
    .circuit(1)
    .EUt(-512)
    .duration(1600)
    .buildAndRegister();

zpe.recipeBuilder()
    .inputs(<ore:dustNaquadah> * 1)
    .circuit(1)
    .EUt(-2048)
    .duration(3200)
    .buildAndRegister();

zpe.recipeBuilder()
    .inputs(<ore:dustNaquadahEnriched> * 1)
    .circuit(1)
    .EUt(-8192)
    .duration(6400)
    .buildAndRegister();

zpe.recipeBuilder()
    .inputs(<ore:dustNaquadria> * 1)
    .circuit(1)
    .EUt(-32768)
    .duration(12800)
    .buildAndRegister();

zpe.recipeBuilder()
    .inputs(<ore:dustTrinium> * 1)
    .circuit(1)
    .EUt(-131072)
    .duration(25600)
    .buildAndRegister();

zpe.recipeBuilder()
    .inputs(<ore:dustEuropium> * 1)
    .circuit(1)
    .EUt(-262144)
    .duration(25600)
    .buildAndRegister();

zpe.recipeBuilder()
    .inputs(<ore:dustAmericium> * 1)
    .circuit(1)
    .EUt(-524288)
    .duration(25600)
    .buildAndRegister();

zpe.recipeBuilder()
    .inputs(<ore:dustTritanium> * 1)
    .circuit(1)
    .EUt(-524288)
    .duration(51200)
    .buildAndRegister();

zpe.recipeBuilder()
    .inputs(<ore:dustNeutronium> * 1)
    .circuit(1)
    .EUt(-524288)
    .duration(102400)
    .buildAndRegister();

//Infinite production

zpe.recipeBuilder()
    .inputs(<ore:dustSmallDarkmatteralloy> * 1)
    .notConsumable(<contenttweaker:precursor_database>)
    .EUt(-8388608)
    .duration(1000000000)
    .buildAndRegister();

zpe.recipeBuilder()
    .inputs(<ore:dustSmallDarkenergyalloy> * 1)
    .notConsumable(<contenttweaker:precursor_database>)
    .EUt(-33554432)
    .duration(1000000000)
    .buildAndRegister();

zpe.recipeBuilder()
    .inputs(<ore:dustDarkmatteralloy> * 1)
    .notConsumable(<contenttweaker:precursor_database>)
    .EUt(-134217728)
    .duration(1000000000)
    .buildAndRegister();

zpe.recipeBuilder()
    .inputs(<ore:dustDarkenergyalloy> * 1)
    .notConsumable(<contenttweaker:precursor_database>)
    .EUt(-536870912)
    .duration(1000000000)
    .buildAndRegister();

zpe.recipeBuilder()
    .inputs(<ore:dustStellarite> * 1)
    .notConsumable(<contenttweaker:precursor_database>)
    .EUt(-2147483647)
    .duration(1000000000)
    .buildAndRegister();